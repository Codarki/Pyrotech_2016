<?xml version="1.0" ?>
<parameters>
	<parameter
		label = "Self illuminate map"
		name = "self_illuminate_map"
		type = "texture2D"
		hlsl = "self_illuminate_texture"
		default_value = "data/images/common/white.tga">
	</parameter>
	
	<parameter
		label = "Self illuminate map 2"
		name = "self_illuminate_map_2"
		type = "texture2D"
		hlsl = "self_illuminate_texture_2"
		default_value = "data/images/common/black.tga">
	</parameter>
	<parameter
		label = "Self illuminate map 3"
		name = "self_illuminate_map_3"
		type = "texture2D"
		hlsl = "self_illuminate_texture_3"
		default_value = "data/images/common/black.tga">
	</parameter>	
	
	<parameter
		label = "Self illuminate color"
		name = "self_illuminate_color"
		type = "float3"
		hlsl = "self_illuminate_color"
		default_value = "1.0 1.0 1.0">
	</parameter>
	<parameter
		label = "Alpha Coeff"
		name = "alpha_coeff"
		type = "float"
		hlsl = "alpha_coeff"
		default_value = "1.0">
	</parameter>
	<parameter
		label = "Texcoord Offset"
		name = "texcoord_offset"
		type = "float3"
		hlsl = "texcoord_offset"
		default_value = "0 0 0">
	</parameter>
	
	<parameter
		label = "Self illuminate color 2"
		name = "self_illuminate_color_2"
		type = "float3"
		hlsl = "self_illuminate_color_2"
		default_value = "1.0 1.0 1.0">
	</parameter>
	<parameter
		label = "Alpha Coeff 2"
		name = "alpha_coeff_2"
		type = "float"
		hlsl = "alpha_coeff_2"
		default_value = "1.0">
	</parameter>
	<parameter
		label = "Texcoord Offset 2"
		name = "texcoord_offset_2"
		type = "float3"
		hlsl = "texcoord_offset_2"
		default_value = "0 0 0">
	</parameter>

	<parameter
		label = "Self illuminate color 3"
		name = "self_illuminate_color_3"
		type = "float3"
		hlsl = "self_illuminate_color_3"
		default_value = "1.0 1.0 1.0">
	</parameter>
	<parameter
		label = "Alpha Coeff 3"
		name = "alpha_coeff_3"
		type = "float"
		hlsl = "alpha_coeff_3"
		default_value = "1.0">
	</parameter>
	<parameter
		label = "Texcoord Offset 3"
		name = "texcoord_offset_3"
		type = "float3"
		hlsl = "texcoord_offset_3"
		default_value = "0 0 0">
	</parameter>		
</parameters>

<sampler_states>
	<sampler
		name = "self_illuminate_sampler"
		texture = "self_illuminate_texture"
		address_u = "WRAP"
		address_v = "WRAP"
		address_w = "WRAP"
		min_filter = "LINEAR"
		mag_filter = "LINEAR"
		mip_filter = "LINEAR"
		>
	</sampler>
	<sampler
		name = "self_illuminate_sampler_2"
		texture = "self_illuminate_texture_2"
		address_u = "WRAP"
		address_v = "WRAP"
		address_w = "WRAP"
		min_filter = "LINEAR"
		mag_filter = "LINEAR"
		mip_filter = "LINEAR"
		>
	</sampler>
	<sampler
		name = "self_illuminate_sampler_3"
		texture = "self_illuminate_texture_3"
		address_u = "WRAP"
		address_v = "WRAP"
		address_w = "WRAP"
		min_filter = "LINEAR"
		mag_filter = "LINEAR"
		mip_filter = "LINEAR"
		>
	</sampler>	
</sampler_states>

<streams>
	<stream0
		position = 0
		texcoord = 0>
	</stream0>
</streams>

<additive_blend v="false"/>

<vertex_shader
	stream = "stream0"
	hlsl = "
	float4x4 object_to_world;
	float4x4 world_to_view_clip;
	float3 texcoord_offset;
	float3 texcoord_offset_2;
	float3 texcoord_offset_3;	

	struct input_vertex
	{
		float4 position : POSITION;
		float2 texcoord : TEXCOORD0;
	};

	struct output_vertex
	{
		float4 position : POSITION;
		float2 texcoord : TEXCOORD0;
		float2 texcoord2 : TEXCOORD1;
		float2 texcoord3 : TEXCOORD2;
	};

	void main_vs(in input_vertex input, out output_vertex output)
	{
		float4 position_in_world = mul(object_to_world, input.position);
		output.position = mul(world_to_view_clip, position_in_world);
		output.texcoord = input.texcoord + texcoord_offset.xy;
		output.texcoord2 = input.texcoord + texcoord_offset_2.xy;
		output.texcoord3 = input.texcoord + texcoord_offset_3.xy;
	}
	">
</vertex_shader>
<pixel_shader
	hlsl = "
	texture2D self_illuminate_texture;
	sampler2D self_illuminate_sampler;
	
	texture2D self_illuminate_texture_2;
	sampler2D self_illuminate_sampler_2;
	
	texture2D self_illuminate_texture_3;
	sampler2D self_illuminate_sampler_3;	
	
	float3 self_illuminate_color;
	float alpha_coeff;
	
	float3 self_illuminate_color_2;
	float alpha_coeff_2;
	
	float3 self_illuminate_color_3;
	float alpha_coeff_3;	
    	
	void main_ps(
        out float4 color : COLOR0,
        float2 texcoord : TEXCOORD0,
		float2 texcoord2 : TEXCOORD1,
		float2 texcoord3 : TEXCOORD2)
	{
		float4 color2 = 0;
		float4 color3 = 0;
	
		color.xyzw = tex2D(self_illuminate_sampler, texcoord).xyzw;
		color2.xyzw = tex2D(self_illuminate_sampler_2, texcoord2).xyzw;
		color3.xyzw = tex2D(self_illuminate_sampler_3, texcoord3).xyzw;
		
		// convert from gamma 2.2 to gamma 1.0
		color = pow(abs(color), 2.2);
		color2 = pow(abs(color2), 2.2);
		color3 = pow(abs(color3), 2.2);
		
		color.xyz *= self_illuminate_color;
		color *= alpha_coeff;
		
		color2.xyz *= self_illuminate_color_2;
		color2 *= alpha_coeff_2;
		
		color3.xyz *= self_illuminate_color_3;
		color3 *= alpha_coeff_3;
		
		color += color2;
		color += color3;
	}
	">
</pixel_shader>
