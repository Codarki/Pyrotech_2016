<?xml version="1.0" ?>
<parameters>
	<parameter
		label = "Self illuminate map"
		name = "self_illuminate_map"
		type = "texture2D"
		hlsl = "self_illuminate_texture"
		default_value = "data/images/common/white.tga">
	</parameter>
	<parameter
		label = "Self illuminate color"
		name = "self_illuminate_color"
		type = "float3"
		hlsl = "self_illuminate_color"
		default_value = "1.0 1.0 1.0">
	</parameter>
	<parameter
		label = "Alpha Coeff"
		name = "alpha_coeff"
		type = "float"
		hlsl = "alpha_coeff"
		default_value = "1.0">
	</parameter>
	<parameter
		label = "Texcoord Offset"
		name = "texcoord_offset"
		type = "float3"
		hlsl = "texcoord_offset"
		default_value = "0 0 0">
	</parameter>
	<parameter
		label = "Distort scale coeffient"
		name = "distort_scale_coeff"
		type = "float3"
		hlsl = "distort_scale_coeff"
		default_value = "0 0 0">
	</parameter>
	<parameter
		label = "Distort time coeffient"
		name = "distort_time_coeff"
		type = "float3"
		hlsl = "distort_time_coeff"
		default_value = "0.02 0.02 0.02">
	</parameter>
	<parameter
		label = "Distort position coeffient"
		name = "distort_position_coeff"
		type = "float3"
		hlsl = "distort_position_coeff"
		default_value = "1 1 1">
	</parameter>
</parameters>

<sampler_states>
	<sampler
		name = "self_illuminate_sampler"
		texture = "self_illuminate_texture"
		address_u = "WRAP"
		address_v = "WRAP"
		address_w = "WRAP"
		min_filter = "LINEAR"
		mag_filter = "LINEAR"
		mip_filter = "LINEAR"
		>
	</sampler>
</sampler_states>

<streams>
	<stream0
		position = 0
		texcoord = 0>
	</stream0>
</streams>

<additive_blend v="true"/>

<vertex_shader
	stream = "stream0"
	hlsl = "
	float4x4 object_to_world;
	float4x4 world_to_view_clip;
	float3 texcoord_offset;
    float time;
    float3 distort_scale_coeff;
    float3 distort_time_coeff;
    float3 distort_position_coeff;

	struct input_vertex
	{
		float4 position : POSITION;
		float2 texcoord : TEXCOORD0;
	};

	struct output_vertex
	{
		float4 position : POSITION;
		float2 texcoord : TEXCOORD0;
	};

	void main_vs(in input_vertex input, out output_vertex output)
	{
		float4 position_in_world = mul(object_to_world, input.position);
        position_in_world.xyz += sin(time * distort_time_coeff + position_in_world.xyz * distort_position_coeff) * distort_scale_coeff;
		output.position = mul(world_to_view_clip, position_in_world);
		output.texcoord = input.texcoord + texcoord_offset.xy;
	}
	">
</vertex_shader>
<pixel_shader
	hlsl = "
	texture2D self_illuminate_texture;
	sampler2D self_illuminate_sampler;
	float3 self_illuminate_color;
	float alpha_coeff;
    	
	void main_ps(
        out float4 color : COLOR0,
        float2 texcoord : TEXCOORD0)
	{
		color.xyzw = tex2D(self_illuminate_sampler, texcoord).xyzw;
		
		// convert from gamma 2.2 to gamma 1.0
		color = pow(abs(color), 2.2);
		
		color.xyz *= self_illuminate_color;
		color *= alpha_coeff;
        //color.w = 1;
	}
	">
</pixel_shader>
